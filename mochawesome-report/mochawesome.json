{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "start": "2022-11-29T16:10:32.476Z",
    "end": "2022-11-29T16:10:34.586Z",
    "duration": 2110,
    "testsRegistered": 6,
    "passPercent": 83.33333333333334,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9046601a-61f6-475b-8a99-bdeb829fe442",
      "title": "",
      "fullFile": "cypress\\e2e\\exercicio-api.cy.js",
      "file": "cypress\\e2e\\exercicio-api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "42379609-b926-4269-91ef-240a4324af37",
          "title": "Testes da Funcionalidade Usuários",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato de usuários",
              "fullTitle": "Testes da Funcionalidade Usuários Deve validar contrato de usuários",
              "timedOut": null,
              "duration": 281,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//TODO: \ncy.request('usuarios').then(response => {\n  return _usuario.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "4e98b761-42fb-4d3d-b8e3-97d8fd8b7db2",
              "parentUUID": "42379609-b926-4269-91ef-240a4324af37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve listar usuários cadastrados",
              "fullTitle": "Testes da Funcionalidade Usuários Deve listar usuários cadastrados",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'usuarios'\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property('usuarios');\n});",
              "err": {},
              "uuid": "87213ed1-088f-4a10-bdd2-43cbf99335ec",
              "parentUUID": "42379609-b926-4269-91ef-240a4324af37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário com sucesso",
              "fullTitle": "Testes da Funcionalidade Usuários Deve cadastrar um usuário com sucesso",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let email = _faker.faker.internet.email();\ncy.cadastrarUsuario(\"Larissa teste\", email, \"123\").then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n});",
              "err": {},
              "uuid": "c8f0fd6f-17be-4a19-af20-5aeb282347be",
              "parentUUID": "42379609-b926-4269-91ef-240a4324af37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar um usuário com email inválido",
              "fullTitle": "Testes da Funcionalidade Usuários Deve validar um usuário com email inválido",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarUsuario(\"Larissa\", \"larissatestee@qa.com.br\", \"123\").then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "7cbc448c-7587-44ad-aeb5-20525e531605",
              "parentUUID": "42379609-b926-4269-91ef-240a4324af37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um usuário previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade Usuários Deve editar um usuário previamente cadastrado",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarUsuario(\"Larissa teste\", email, \"123\").then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'PUT',\n    url: `usuarios/${id}`,\n    body: {\n      \"nome\": \"Fulano da Silva\",\n      \"email\": email,\n      \"password\": \"teste\",\n      \"administrador\": \"true\"\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "3e0d98d8-ba5b-42f4-a89d-ef88a12f00ed",
              "parentUUID": "42379609-b926-4269-91ef-240a4324af37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um usuário previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade Usuários Deve deletar um usuário previamente cadastrado",
              "timedOut": null,
              "duration": 965,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarUsuario(\"Larissa teste\", email, \"123\").then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'DELETE',\n    url: `usuarios/${id}`,\n    body: {\n      \"nome\": \"Fulano da Silva\",\n      \"email\": email,\n      \"password\": \"teste\",\n      \"administrador\": \"true\"\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro excluído com sucesso');\n  });\n});",
              "err": {
                "message": "AssertionError: expected 'Nenhum registro excluído' to equal 'Registro excluído com sucesso'",
                "estack": "AssertionError: expected 'Nenhum registro excluído' to equal 'Registro excluído com sucesso'\n    at Context.eval (webpack:///./cypress/e2e/exercicio-api.cy.js:82:49)",
                "diff": "- 'Nenhum registro excluído'\n+ 'Registro excluído com sucesso'\n"
              },
              "uuid": "719a8f76-69bb-4745-b1b9-cfa50fa036d3",
              "parentUUID": "42379609-b926-4269-91ef-240a4324af37",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e98b761-42fb-4d3d-b8e3-97d8fd8b7db2",
            "87213ed1-088f-4a10-bdd2-43cbf99335ec",
            "c8f0fd6f-17be-4a19-af20-5aeb282347be",
            "7cbc448c-7587-44ad-aeb5-20525e531605",
            "3e0d98d8-ba5b-42f4-a89d-ef88a12f00ed"
          ],
          "failures": [
            "719a8f76-69bb-4745-b1b9-cfa50fa036d3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1846,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}